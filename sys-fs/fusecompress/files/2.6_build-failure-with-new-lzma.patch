commit 9e9d59d58464b82595638549bd2df6e605e25479
Author: Milan Svoboda <milan.svoboda@centrum.cz>
Date:   Sun Oct 11 10:21:05 2009 +0200

    Use xz-4.999.9beta instead of liblzma-4.999.5alpha.

diff --git a/README b/README
index cb6837e..9834ff5 100644
--- a/README
+++ b/README
@@ -41,7 +41,7 @@ Requires:
 
 	libz
 	libbz2
-	liblzma = 4.999.5alpha (Download source from http://tukaani.org/lzma/)
+	xz-4.999.9beta (lzma library from http://tukaani.org/xz/xz-4.999.9beta.tar.gz)
 	liblzo2
 
 Compile:
diff --git a/src/boost/iostreams/filter/lzma.cpp b/src/boost/iostreams/filter/lzma.cpp
index 59296e9..6e35ab3 100644
--- a/src/boost/iostreams/filter/lzma.cpp
+++ b/src/boost/iostreams/filter/lzma.cpp
@@ -28,10 +28,10 @@ namespace lzma {
 
                     // Compression levels
 
-const lzma_easy_level no_compression       = LZMA_EASY_COPY;
-const lzma_easy_level best_speed           = LZMA_EASY_LZMA2_1;
-const lzma_easy_level best_compression     = LZMA_EASY_LZMA_9;
-const lzma_easy_level default_compression  = LZMA_EASY_LZMA_7;
+const uint32_t no_compression       = 0;
+const uint32_t best_speed           = 1;
+const uint32_t best_compression     = 9;
+const uint32_t default_compression  = 2;
 
                     // Status codes
 
@@ -39,7 +39,7 @@ const int okay                 = LZMA_OK;
 const int stream_end           = LZMA_STREAM_END;
 const int unsupported_check    = LZMA_UNSUPPORTED_CHECK;
 const int mem_error            = LZMA_MEM_ERROR;
-const int header_error         = LZMA_HEADER_ERROR;
+const int options_error        = LZMA_OPTIONS_ERROR;
 const int data_error           = LZMA_DATA_ERROR;
 const int buf_error            = LZMA_BUF_ERROR;
 const int prog_error           = LZMA_PROG_ERROR;
@@ -135,7 +135,7 @@ void lzma_base::do_init
 
     lzma_error::check(
         compress ?
-            lzma_easy_encoder(s, p.level) :
+            lzma_easy_encoder(s, p.level, LZMA_CHECK_CRC32) :
             lzma_stream_decoder(s, 100 * 1024 * 1024, 0 )
     );
 }
diff --git a/src/boost/iostreams/filter/lzma.hpp b/src/boost/iostreams/filter/lzma.hpp
index 83f8c9f..7dfd368 100644
--- a/src/boost/iostreams/filter/lzma.hpp
+++ b/src/boost/iostreams/filter/lzma.hpp
@@ -47,10 +47,10 @@ typedef void (*free_func)(void*, void*);
 
                     // Compression levels
 
-BOOST_IOSTREAMS_DECL extern const lzma_easy_level no_compression;
-BOOST_IOSTREAMS_DECL extern const lzma_easy_level best_speed;
-BOOST_IOSTREAMS_DECL extern const lzma_easy_level best_compression;
-BOOST_IOSTREAMS_DECL extern const lzma_easy_level default_compression;
+BOOST_IOSTREAMS_DECL extern const uint32_t no_compression;
+BOOST_IOSTREAMS_DECL extern const uint32_t best_speed;
+BOOST_IOSTREAMS_DECL extern const uint32_t best_compression;
+BOOST_IOSTREAMS_DECL extern const uint32_t default_compression;
 
                     // Status codes
 
@@ -58,7 +58,7 @@ BOOST_IOSTREAMS_DECL extern const int okay;
 BOOST_IOSTREAMS_DECL extern const int stream_end;
 BOOST_IOSTREAMS_DECL extern const int unsupported_check;
 BOOST_IOSTREAMS_DECL extern const int mem_error;
-BOOST_IOSTREAMS_DECL extern const int header_error;
+BOOST_IOSTREAMS_DECL extern const int options_error;
 BOOST_IOSTREAMS_DECL extern const int data_error;
 BOOST_IOSTREAMS_DECL extern const int buf_error;
 BOOST_IOSTREAMS_DECL extern const int prog_error;
@@ -88,10 +88,10 @@ const int null                               = 0;
 struct lzma_params {
 
     // Non-explicit constructor.
-    lzma_params( lzma_easy_level level = lzma::default_compression )
+    lzma_params( uint32_t level = lzma::default_compression )
         : level(level)
         { }
-    lzma_easy_level level;
+    uint32_t level;
 };
 
 //
